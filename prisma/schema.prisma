generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://admin:cs509password@database-1.czghlbwkfjxf.us-east-2.rds.amazonaws.com:3306/NEWEGG"
}

model USERS {
  user_id  String @id @db.VarChar(36)
  username String @unique(map: "username") @db.VarChar(255)
}

model devices {
  device_id              String        @id @unique(map: "DEVICES_pk") @db.VarChar(36)
  store_id               String        @db.VarChar(36)
  device_name            String?       @db.VarChar(255)
  form_factor            String?       @db.VarChar(255)
  processor_manufacturer String?       @db.VarChar(255)
  processor_model        String?       @db.VarChar(255)
  memory_type            String?       @db.VarChar(255)
  memory_mb              Int?
  storage_type           String?       @db.VarChar(255)
  storage_gb             Int?
  price                  Float?        @db.Float
  operating_system       String?       @db.VarChar(255)
  dedicated_gpu          Boolean?
  gpu_manufacturer       String?       @db.VarChar(255)
  gpu_model              String?       @db.VarChar(255)
  listing_active         Boolean?
  updated_at             DateTime?     @default(now()) @db.DateTime(0)
  stores                 stores        @relation(fields: [store_id], references: [store_id], onDelete: Cascade, onUpdate: NoAction, map: "devices_ibfk_1")
  transactions           transactions?

  @@index([store_id], map: "DEVICES_ibfk_1")
}

model stores {
  store_id       String         @id @db.VarChar(36)
  store_name     String         @unique(map: "STORES_pk") @db.VarChar(255)
  coords_lat     Float          @db.Float
  coords_long    Float          @db.Float
  street_address String?        @db.VarChar(255)
  store_owner_id String         @db.VarChar(36)
  updated_at     DateTime?      @default(now()) @db.DateTime(0)
  devices        devices[]
  transactions   transactions[]

  @@index([store_owner_id], map: "STORES_ibfk_1")
}

model transactions {
  transaction_id String   @id @db.VarChar(36)
  store_id       String?  @default("deleted") @db.VarChar(36)
  device_id      String?  @unique(map: "TRANSACTIONS_pk") @default("deleted") @db.VarChar(36)
  site_fee       Float?   @db.Float
  shipping_cost  Float?   @db.Float
  total_cost     Float?   @db.Float
  buyer_address  String?  @db.VarChar(255)
  buyer_lat      Float?   @db.Float
  buyer_long     Float?   @db.Float
  devices        devices? @relation(fields: [device_id], references: [device_id], onDelete: Cascade, onUpdate: NoAction, map: "TRANSACTIONS_DEVICES_device_id_fk")
  stores         stores?  @relation(fields: [store_id], references: [store_id], map: "transactions_ibfk_1")

  @@index([store_id], map: "TRANSACTIONS_ibfk_1")
}
